# test_checker.py
import os
import json
from models import Client, Service, Staff, Appointment
from storage import CarService  # –∏–ª–∏ –∫–∞–∫ –≤—ã –Ω–∞–∑–≤–∞–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å

def run_tests():
    print("üîß –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã CarFix...\n")

    # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    data_dir = "data"
    for file in ["clients.json", "services.json", "staff.json", "appointments.json"]:
        path = os.path.join(data_dir, file)
        if os.path.exists(path):
            os.remove(path)

    # –°–æ–∑–¥–∞—ë–º —Å–∏—Å—Ç–µ–º—É
    cs = CarService()
    cs.load_data()  # –∑–∞–≥—Ä—É–∂–∞–µ—Ç –ø—É—Å—Ç—ã–µ —Å–ø–∏—Å–∫–∏

    print("‚úÖ –¢–µ—Å—Ç 1: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞")
    client = cs.add_client("–¢–µ—Å—Ç–æ–≤—ã–π –ö–ª–∏–µ–Ω—Ç", "+70000000000", "Toyota Camry", "–¢000–¢–¢")
    assert client.client_id == 1, "ID –∫–ª–∏–µ–Ω—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 1"
    assert client.name == "–¢–µ—Å—Ç–æ–≤—ã–π –ö–ª–∏–µ–Ω—Ç"
    print("   ‚Üí –ö–ª–∏–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω: ID =", client.client_id)

    print("\n‚úÖ –¢–µ—Å—Ç 2: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É—Å–ª—É–≥–∏")
    service = cs.add_service("–¢–µ—Å—Ç–æ–≤–∞—è –º–æ–π–∫–∞", 15, 300.0)
    assert service.service_id == 1
    assert service.name == "–¢–µ—Å—Ç–æ–≤–∞—è –º–æ–π–∫–∞"
    print("   ‚Üí –£—Å–ª—É–≥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞: ID =", service.service_id)

    print("\n‚úÖ –¢–µ—Å—Ç 3: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞")
    staff = cs.add_staff("–¢–µ—Å—Ç–æ–≤—ã–π –ú–æ–π—â–∏–∫", "–ú–æ–π—â–∏–∫")
    assert staff.staff_id == 1
    assert staff.position == "–ú–æ–π—â–∏–∫"
    print("   ‚Üí –°–æ—Ç—Ä—É–¥–Ω–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω: ID =", staff.staff_id)

    print("\n‚úÖ –¢–µ—Å—Ç 4: –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏")
    appointment = cs.create_appointment("+70000000000", 1, "2025-06-01 10:00")
    assert appointment is not None, "–ó–∞–ø–∏—Å—å –Ω–µ —Å–æ–∑–¥–∞–Ω–∞"
    assert appointment.status == "–∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ"
    assert appointment.staff_id == 1
    print("   ‚Üí –ó–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞: ID =", appointment.appointment_id)

    print("\n‚úÖ –¢–µ—Å—Ç 5: –û—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏")
    success = cs.cancel_appointment(appointment.appointment_id)
    assert success, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å"
    assert cs.get_appointment_by_id(appointment.appointment_id).status == "–æ—Ç–º–µ–Ω–µ–Ω–æ"
    print("   ‚Üí –ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞")

    print("\n‚úÖ –¢–µ—Å—Ç 6: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö")
    cs.save_data()

    # –ü–µ—Ä–µ—Å–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º
    cs2 = CarService()
    cs2.load_data()

    assert len(cs2.clients) == 1
    assert len(cs2.services) == 1
    assert len(cs2.staff) == 1
    assert len(cs2.appointments) == 1
    assert cs2.appointments[0].status == "–æ—Ç–º–µ–Ω–µ–Ω–æ"
    print("   ‚Üí –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")

    print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")

if __name__ == "__main__":
    run_tests()